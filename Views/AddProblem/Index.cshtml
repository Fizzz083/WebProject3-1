@model List<MyWebApp.Models.AddProblem>

@{
    ViewData["Title"] = "Problems";
}

@* @using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;
@* @using PagedList.Web.Common; *@
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers; *@


<div style="margin-top: 40px;">
<h3 class="textstylei">Problems</h3>
<table class ="tableclass" style="width: 900px; height:auto;">
    <tr>
        <th>
            Problem Name
        </th>
        <th>
            Tag
        </th>
        <th>
           Hint
        </th>
        <th>
           Added By
        </th>
        <th>
           Link
        </th>
    </tr>

    @if(Model.Count()==0)
    {
        <h4>No problems found.</h4>
    }
    else
    {
        foreach(var item in Model)
        {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.PName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PTag)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PIdea)
                        </td>
                        <td>
                           @Html.DisplayFor(modelItem => item.PAddedBy)
                        </td>
                        <td>
                            <a href="@Html.DisplayFor(modelItem => item.PLink)" > Try to solve</a>
                           
                        </td>
                    </tr>
        }
    }

</table>

<br/>

@* 
<!--div style="display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;" >
    @Html.PagedListPager((IPagedList)Model, i => Url.Action("Index","AddProblem", new { i = i }),
        new PagedListRenderOptions
        {
           DisplayLinkToIndividualPages = true,
                        DisplayPageCountAndCurrentLocation = false,
                        MaximumPageNumbersToDisplay = 10,
                        LiElementClasses = new string[] { "page-item" },
                   PageClasses = new string[] { "page-link" },
        })
</div --> *@

<div class="paging">
        @{
            //string s = (string)ViewData["size"];
            int si = (int)ViewData["size"];

        }

    <div class="btn2 btn2up" style="height: 30px;">

            @if (si > 5)
            {

                @if ((int)ViewData["extra"] != 0)
                {
                    si = si - (int)ViewData["extra"];
                }

                {

                    si = si - 5;
                }

            <a class="pagingbutton" asp-area="" asp-controller="AddProblem" asp-action="Index" asp-route-i=1
            asp-route-size="@si">Previous</a>
            }
            else
            {
            <p class="pagingbuttonoff">Previous</p>

            }
    </div>
    <div style="margin-left: 10px;"></div>
    <div class="btn2 btn2up" style="height: 30px;">
            @if ((int)ViewData["done"] != 1)
            {
            <a asp-area="" asp-controller="AddProblem" asp-action="Index" asp-route-i=2 asp-route-size="@si">Next</a>
            }
            else
            {
            <p class="pagingbuttonoff">Next</p>
            }
    </div>

</div>


<div style="margin-left: 130px;height:40px;;">
    <a class="btn2 btn2up" style="text-decoration: none;color:black;"  asp-area="" asp-controller="AddProblem" asp-action="Create">Add problems</a>
</div>


<p id="forcheck" style="display: none;">0</p>